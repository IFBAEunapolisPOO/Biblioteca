/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifba.eunapolis.ads.poo2016.presentation;

import br.edu.ifba.eunapolis.ads.poo2016.Biblioteca;
import br.edu.ifba.eunapolis.ads.poo2016.exception.ItemJaEmprestadoException;
import br.edu.ifba.eunapolis.ads.poo2016.exception.ItemNaoEncotradoException;
import br.edu.ifba.eunapolis.ads.poo2016.exception.MaximoEmprestimoException;
import br.edu.ifba.eunapolis.ads.poo2016.modelo.Aluno;
import br.edu.ifba.eunapolis.ads.poo2016.modelo.Professor;
import br.edu.ifba.eunapolis.ads.poo2016.modelo.Apostila;
import br.edu.ifba.eunapolis.ads.poo2016.modelo.ItemEmpretavel;
import br.edu.ifba.eunapolis.ads.poo2016.modelo.enums.TiposAudioVisual;
import br.edu.ifba.eunapolis.ads.poo2016.modelo.enums.TiposItemEmprestavel;
import br.edu.ifba.eunapolis.ads.poo2016.modelo.enums.TiposUsuario;
import br.edu.ifba.eunapolis.ads.poo2016.modelo.Livro;
import br.edu.ifba.eunapolis.ads.poo2016.modelo.AudioVisual;
import br.edu.ifba.eunapolis.ads.poo2016.modelo.Usuario;
import java.awt.Component;

import javax.swing.JOptionPane;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author Usu√°rio
 */
public class NovoJFrame extends javax.swing.JFrame {

    private Biblioteca biblioteca = new Biblioteca();
    private ItemEmpretavel empretavel;
    private Usuario usuario;
    private TiposAudioVisual tiposAudioVisualSelecinonado;
    private TiposItemEmprestavel tiposItemEmprestavelSelecinonado;
    private TiposUsuario tiposUsuarioSelecinonado;

    private ListCellRenderer itemEmprestavelCellRenderer = new DefaultListCellRenderer() {
        @Override
        public Component getListCellRendererComponent(final JList<?> list,
                final Object value,
                final int index,
                final boolean isSelected,
                final boolean cellHasFocus) {
            super.getListCellRendererComponent(list, value, index, isSelected,
                    cellHasFocus);
            if (value instanceof ItemEmpretavel) {
                setText(((ItemEmpretavel) value).getNome() + "(" + ((ItemEmpretavel) value).getTitulo() + ")");
            }

            return this;
        }
    };

    private ListCellRenderer usuarioCellRenderer = new DefaultListCellRenderer() {
        @Override
        public Component getListCellRendererComponent(final JList<?> list,
                final Object value,
                final int index,
                final boolean isSelected,
                final boolean cellHasFocus) {
            super.getListCellRendererComponent(list, value, index, isSelected,
                    cellHasFocus);
            if (value instanceof Usuario) {
                setText(((Usuario) value).getNome() + "(" + ((Usuario) value).getNome() + ")");
            }

            return this;
        }
    };

    private ItemEmpretavel itemEmpretavelSelecionado;
    private Usuario usuarioSelecionado;

    /**
     * Creates new form NovoJFrame
     */
    public NovoJFrame() {
        initComponents();
        configurarVisibilidadeTipoItem();
        configurarVisibilidadeUsuario();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        rdoGroupTipoUsuario = new javax.swing.ButtonGroup();
        tbPainal = new javax.swing.JTabbedPane();
        pnlItem = new javax.swing.JPanel();
        lblTituloItem = new javax.swing.JLabel();
        txtTituloItem = new javax.swing.JTextField();
        lblNomeItem = new javax.swing.JLabel();
        txtAutorItem = new javax.swing.JTextField();
        lblTipoItem = new javax.swing.JLabel();
        cmbTipoItem = new javax.swing.JComboBox<TiposItemEmprestavel>();
        lblISBN = new javax.swing.JLabel();
        txtISBN = new javax.swing.JTextField();
        lblTipoMidia = new javax.swing.JLabel();
        cmbTipoMidia = new javax.swing.JComboBox<TiposAudioVisual>();
        btnAddItem = new javax.swing.JButton();
        pnlUsuario = new javax.swing.JPanel();
        rbAluno = new javax.swing.JRadioButton();
        rbProfessor = new javax.swing.JRadioButton();
        lblNomeALuno = new javax.swing.JLabel();
        txtNomeUsuario = new javax.swing.JTextField();
        btnAddUsuario = new javax.swing.JButton();
        lblMatricula = new javax.swing.JLabel();
        txtMatricula = new javax.swing.JTextField();
        lblSiape = new javax.swing.JLabel();
        txtSiape = new javax.swing.JTextField();
        pnEmprestar = new javax.swing.JPanel();
        btnEmprestar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cmbEmprestaveis = new javax.swing.JComboBox<ItemEmpretavel>();
        jLabel2 = new javax.swing.JLabel();
        cmbUsuarioEmprestimo = new javax.swing.JComboBox<Usuario>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbPainal.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tbPainalStateChanged(evt);
            }
        });

        lblTituloItem.setText("Titulo Item");

        lblNomeItem.setText("Autor Item");

        lblTipoItem.setText("Tipo Item");

        cmbTipoItem.setModel(new DefaultComboBoxModel<TiposItemEmprestavel>(TiposItemEmprestavel.values())
        );

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${tiposItemEmprestavelSelecinonado}"), cmbTipoItem, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        cmbTipoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoItemActionPerformed(evt);
            }
        });

        lblISBN.setText("ISBN");

        lblTipoMidia.setText("TIpo Midia");

        cmbTipoMidia.setModel(new DefaultComboBoxModel<TiposAudioVisual>(TiposAudioVisual.values())
        );

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${tiposAudioVisualSelecinonado}"), cmbTipoMidia, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        btnAddItem.setText("Add");
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlItemLayout = new javax.swing.GroupLayout(pnlItem);
        pnlItem.setLayout(pnlItemLayout);
        pnlItemLayout.setHorizontalGroup(
            pnlItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlItemLayout.createSequentialGroup()
                .addComponent(lblTituloItem)
                .addGap(18, 18, 18)
                .addComponent(txtTituloItem))
            .addGroup(pnlItemLayout.createSequentialGroup()
                .addGroup(pnlItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTipoMidia)
                    .addComponent(lblISBN)
                    .addComponent(lblNomeItem)
                    .addComponent(lblTipoItem))
                .addGap(18, 18, 18)
                .addGroup(pnlItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbTipoItem, 0, 369, Short.MAX_VALUE)
                    .addComponent(txtAutorItem)
                    .addComponent(txtISBN)
                    .addComponent(cmbTipoMidia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlItemLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAddItem))
        );
        pnlItemLayout.setVerticalGroup(
            pnlItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlItemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTituloItem)
                    .addComponent(txtTituloItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeItem)
                    .addComponent(txtAutorItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTipoItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTipoItem))
                .addGap(7, 7, 7)
                .addGroup(pnlItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblISBN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipoMidia)
                    .addComponent(cmbTipoMidia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddItem)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        tbPainal.addTab("Item", pnlItem);

        rdoGroupTipoUsuario.add(rbAluno);
        rbAluno.setText("Aluno");
        rbAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAlunoActionPerformed(evt);
            }
        });

        rdoGroupTipoUsuario.add(rbProfessor);
        rbProfessor.setText("Professor");
        rbProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbProfessorActionPerformed(evt);
            }
        });

        lblNomeALuno.setText("Nome");

        btnAddUsuario.setText("Add");
        btnAddUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUsuarioActionPerformed(evt);
            }
        });

        lblMatricula.setText("Matr√≠cula");

        lblSiape.setText("SIAPE");

        javax.swing.GroupLayout pnlUsuarioLayout = new javax.swing.GroupLayout(pnlUsuario);
        pnlUsuario.setLayout(pnlUsuarioLayout);
        pnlUsuarioLayout.setHorizontalGroup(
            pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUsuarioLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAddUsuario))
                    .addGroup(pnlUsuarioLayout.createSequentialGroup()
                        .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlUsuarioLayout.createSequentialGroup()
                                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlUsuarioLayout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(lblNomeALuno))
                                    .addComponent(lblMatricula))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNomeUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                                    .addComponent(txtMatricula)))
                            .addGroup(pnlUsuarioLayout.createSequentialGroup()
                                .addComponent(rbAluno)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbProfessor))
                            .addGroup(pnlUsuarioLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(lblSiape)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSiape, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlUsuarioLayout.setVerticalGroup(
            pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbAluno)
                    .addComponent(rbProfessor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNomeALuno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMatricula))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSiape)
                    .addComponent(txtSiape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddUsuario)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        tbPainal.addTab("Usu√°rio", pnlUsuario);

        btnEmprestar.setText("Emprestar");
        btnEmprestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmprestarActionPerformed(evt);
            }
        });

        jLabel1.setText("Itens Emprest√°veis");

        cmbEmprestaveis.setRenderer(itemEmprestavelCellRenderer
        );

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${itemEmpretavelSelecionado}"), cmbEmprestaveis, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jLabel2.setText("Usu√°rio Emprestimo");

        cmbUsuarioEmprestimo.setRenderer(usuarioCellRenderer
        );

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${usuarioSelecionado}"), cmbUsuarioEmprestimo, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout pnEmprestarLayout = new javax.swing.GroupLayout(pnEmprestar);
        pnEmprestar.setLayout(pnEmprestarLayout);
        pnEmprestarLayout.setHorizontalGroup(
            pnEmprestarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnEmprestarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnEmprestarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnEmprestarLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnEmprestar))
                    .addGroup(pnEmprestarLayout.createSequentialGroup()
                        .addGroup(pnEmprestarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnEmprestarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbEmprestaveis, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbUsuarioEmprestimo, javax.swing.GroupLayout.Alignment.TRAILING, 0, 308, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnEmprestarLayout.setVerticalGroup(
            pnEmprestarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnEmprestarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnEmprestarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbEmprestaveis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnEmprestarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbUsuarioEmprestimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addComponent(btnEmprestar)
                .addGap(27, 27, 27))
        );

        tbPainal.addTab("Emprestar", pnEmprestar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbPainal)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbPainal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbTipoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoItemActionPerformed
        //Selecione , Apostila, Livro, √Åudio Visual
        configurarVisibilidadeTipoItem();

        if (TiposItemEmprestavel.Apostila.equals(cmbTipoItem.getSelectedItem())) {
            //empretavel = new Apostila(txtTituloItem.getText(), txtAutorItem.getText());
        }
        if (TiposItemEmprestavel.Livro.equals(cmbTipoItem.getSelectedItem())) {
            lblISBN.setVisible(true);
            txtISBN.setVisible(true);

        }
        if (TiposItemEmprestavel.AudioVisial.equals(cmbTipoItem.getSelectedItem())) {
            lblTipoMidia.setVisible(true);
            cmbTipoMidia.setVisible(true);
        }
    }//GEN-LAST:event_cmbTipoItemActionPerformed

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        if (TiposItemEmprestavel.Apostila.equals(getTiposItemEmprestavelSelecinonado())) {
            empretavel = new Apostila(txtTituloItem.getText(), txtAutorItem.getText());
        }
        if (TiposItemEmprestavel.Livro.equals(getTiposItemEmprestavelSelecinonado())) {
            empretavel = new Livro(txtISBN.getText(), txtTituloItem.getText(), txtAutorItem.getText());

        }
        if (TiposItemEmprestavel.AudioVisial.equals(getTiposItemEmprestavelSelecinonado())) {
            empretavel = new AudioVisual(getTiposAudioVisualSelecinonado(), txtTituloItem.getText(), txtAutorItem.getText());
        }

        biblioteca.inserirNoAcervo(empretavel);
        JOptionPane.showMessageDialog(rootPane, "Item inserido com sucesso");
        limparTelaItem();

    }//GEN-LAST:event_btnAddItemActionPerformed

    private void btnAddUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUsuarioActionPerformed

        if (rbAluno.isSelected()) {
            usuario = new Aluno(txtNomeUsuario.getText(), txtMatricula.getText());
        }
        if (rbProfessor.isSelected()) {
            usuario = new Professor(txtNomeUsuario.getText(), txtSiape.getText());
        }
        biblioteca.adcionarUsuario(usuario);
        JOptionPane.showMessageDialog(rootPane, "Usu√°rio inserido com sucesso");
        configurarVisibilidadeUsuario();
        limparTelaUsuario();
    }//GEN-LAST:event_btnAddUsuarioActionPerformed

    private void rbAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAlunoActionPerformed
        configurarVisibilidadeUsuario();
        lblMatricula.setVisible(true);
        txtMatricula.setVisible(true);


    }//GEN-LAST:event_rbAlunoActionPerformed

    private void rbProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbProfessorActionPerformed
        configurarVisibilidadeUsuario();
        lblSiape.setVisible(true);
        txtSiape.setVisible(true);

    }//GEN-LAST:event_rbProfessorActionPerformed

    private void btnEmprestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmprestarActionPerformed
        try {
            if(getItemEmpretavelSelecionado() == null){
                JOptionPane.showMessageDialog(rootPane, "Selecione o Item ", "Valida√ß√£o", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if(getUsuarioSelecionado() == null){
                JOptionPane.showMessageDialog(rootPane, "Selecione o usuario", "Valida√ß√£o", JOptionPane.WARNING_MESSAGE);
                return;
            }
            biblioteca.emprestar(getItemEmpretavelSelecionado(), getUsuarioSelecionado());
            JOptionPane.showMessageDialog(rootPane, "Item emprestado com sucesso");
            limparTelaEmprestimo();
        } catch (MaximoEmprestimoException ex) {
            //Logger.getLogger(NovoJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Aluno " + ex.getUsuario().getNome() + " nao pode mais pegar itens", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
        } catch (ItemJaEmprestadoException ex) {
            //Logger.getLogger(NovoJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Aluno " + ex.getUsuario().getNome() + " ja tem o item ", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
        } catch (ItemNaoEncotradoException ex) {
            //Logger.getLogger(NovoJFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Item " + ex.getEmpretavel().getNome() + " nao se encontra na biblioteca ", ex.getMessage(), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEmprestarActionPerformed

    private void tbPainalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tbPainalStateChanged
        if (tbPainal.getSelectedIndex() == 2) {
            cmbEmprestaveis.setModel(listarItens());
            cmbUsuarioEmprestimo.setModel(listarUsuarios());
            limparTelaEmprestimo();
        }
    }//GEN-LAST:event_tbPainalStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NovoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NovoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NovoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NovoJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NovoJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnAddUsuario;
    private javax.swing.JButton btnEmprestar;
    private javax.swing.JComboBox<ItemEmpretavel> cmbEmprestaveis;
    private javax.swing.JComboBox<TiposItemEmprestavel> cmbTipoItem;
    private javax.swing.JComboBox<TiposAudioVisual> cmbTipoMidia;
    private javax.swing.JComboBox<Usuario> cmbUsuarioEmprestimo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblISBN;
    private javax.swing.JLabel lblMatricula;
    private javax.swing.JLabel lblNomeALuno;
    private javax.swing.JLabel lblNomeItem;
    private javax.swing.JLabel lblSiape;
    private javax.swing.JLabel lblTipoItem;
    private javax.swing.JLabel lblTipoMidia;
    private javax.swing.JLabel lblTituloItem;
    private javax.swing.JPanel pnEmprestar;
    private javax.swing.JPanel pnlItem;
    private javax.swing.JPanel pnlUsuario;
    private javax.swing.JRadioButton rbAluno;
    private javax.swing.JRadioButton rbProfessor;
    private javax.swing.ButtonGroup rdoGroupTipoUsuario;
    private javax.swing.JTabbedPane tbPainal;
    private javax.swing.JTextField txtAutorItem;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtMatricula;
    private javax.swing.JTextField txtNomeUsuario;
    private javax.swing.JTextField txtSiape;
    private javax.swing.JTextField txtTituloItem;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void configurarVisibilidadeTipoItem() {
        lblISBN.setVisible(false);
        txtISBN.setVisible(false);

        lblTipoMidia.setVisible(false);
        cmbTipoMidia.setVisible(false);

    }

    public TiposAudioVisual getTiposAudioVisualSelecinonado() {
        return tiposAudioVisualSelecinonado;
    }

    public void setTiposAudioVisualSelecinonado(TiposAudioVisual tiposAudioVisualSelecinonado) {
        TiposAudioVisual tiposAudioVisualSelecinonadoOld = this.tiposAudioVisualSelecinonado;
        this.tiposAudioVisualSelecinonado = tiposAudioVisualSelecinonado;
        this.firePropertyChange("tiposAudioVisualSelecinonado", tiposAudioVisualSelecinonadoOld, this.tiposAudioVisualSelecinonado);
    }

    public TiposItemEmprestavel getTiposItemEmprestavelSelecinonado() {
        return tiposItemEmprestavelSelecinonado;
    }

    public void setTiposItemEmprestavelSelecinonado(TiposItemEmprestavel tiposItemEmprestavelSelecinonado) {
        TiposItemEmprestavel tiposItemEmprestavelSelecinonadoOld = this.tiposItemEmprestavelSelecinonado;
        this.tiposItemEmprestavelSelecinonado = tiposItemEmprestavelSelecinonado;
        this.firePropertyChange("tiposItemEmprestavelSelecinonado", tiposItemEmprestavelSelecinonadoOld, this.tiposItemEmprestavelSelecinonado);
    }

    public void setTiposUsuarioSelecinonado(TiposUsuario tiposUsuarioSelecinonado) {
        TiposUsuario tiposUsuarioSelecinonadoOld = this.tiposUsuarioSelecinonado;
        this.tiposUsuarioSelecinonado = tiposUsuarioSelecinonado;
        this.firePropertyChange("tiposUsuarioSelecinonado", tiposUsuarioSelecinonadoOld, this.tiposUsuarioSelecinonado);
    }

    public TiposUsuario getTiposUsuarioSelecinonado() {
        return tiposUsuarioSelecinonado;
    }

    private void limparTelaItem() {
        setTiposAudioVisualSelecinonado(null);
        setTiposItemEmprestavelSelecinonado(null);
        txtAutorItem.setText("");
        txtISBN.setText("");
        txtTituloItem.setText("");
    }

    private void configurarVisibilidadeUsuario() {
        lblMatricula.setVisible(false);
        txtMatricula.setVisible(false);

        lblSiape.setVisible(false);
        txtSiape.setVisible(false);
    }

    private void limparTelaUsuario() {
        txtNomeUsuario.setText("");
        txtMatricula.setText("");
        txtSiape.setText("");
        rdoGroupTipoUsuario.clearSelection();

    }

    private DefaultComboBoxModel<ItemEmpretavel> listarItens() {
        return new DefaultComboBoxModel<>(biblioteca.obterItens().toArray(new ItemEmpretavel[biblioteca.obterItens().size()]));
    }

    private DefaultComboBoxModel<Usuario> listarUsuarios() {
        return new DefaultComboBoxModel<>(biblioteca.obterUsuarios().toArray(new Usuario[biblioteca.obterUsuarios().size()]));
    }

    public void setItemEmpretavelSelecionado(ItemEmpretavel itemEmpretavelSelecionado) {
        ItemEmpretavel itemEmpretavelSelecionadoOld = this.itemEmpretavelSelecionado;
        this.itemEmpretavelSelecionado = itemEmpretavelSelecionado;
        this.firePropertyChange("itemEmpretavelSelecionado", itemEmpretavelSelecionadoOld, this.itemEmpretavelSelecionado);
    }

    public ItemEmpretavel getItemEmpretavelSelecionado() {
        return itemEmpretavelSelecionado;
    }

    public void setUsuarioSelecionado(Usuario usuarioSelecionado) {
        Usuario usuarioSelecionadoOld = this.usuarioSelecionado;
        this.usuarioSelecionado = usuarioSelecionado;
        this.firePropertyChange("usuarioSelecionado", usuarioSelecionadoOld, this.usuarioSelecionado);
    }

    public Usuario getUsuarioSelecionado() {
        return usuarioSelecionado;
    }

    private void limparTelaEmprestimo() {

        setItemEmpretavelSelecionado(null);
        setUsuarioSelecionado(null);
    }

}
